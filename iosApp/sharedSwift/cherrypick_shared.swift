// This file automatically generated by MOKO KSwift (https://github.com/icerockdev/moko-kswift)
//
import shared

/**
 * selector: ClassContext/cherrypick:shared/com/java/cherrypick/presentationInfra/UiEvent */
public enum UiEventKs<ContentT : AnyObject> {

  case content(UiEventContent<ContentT>)
  case error(UiEventError)
  case loading
  case navigation(UiEventNavigation)

  public var sealed: UiEvent<ContentT> {
    switch self {
    case .content(let obj):
      return obj as shared.UiEvent<ContentT>
    case .error(let obj):
      return obj as! shared.UiEvent<ContentT>
    case .loading:
      return shared.UiEventLoading() as! shared.UiEvent<ContentT>
    case .navigation(let obj):
      return obj as! shared.UiEvent<ContentT>
    }
  }

  public init(_ obj: UiEvent<ContentT>) {
    if let obj = obj as? shared.UiEventContent<ContentT> {
      self = .content(obj)
    } else if let obj = obj as? shared.UiEventError {
      self = .error(obj)
    } else if obj is shared.UiEventLoading {
      self = .loading
    } else if let obj = obj as? shared.UiEventNavigation {
      self = .navigation(obj)
    } else {
      fatalError("UiEventKs not synchronized with UiEvent class")
    }
  }

}
