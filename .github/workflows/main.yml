name: Android CI

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:

  test:
    name: Run unit test cases
    runs-on: [ ubuntu-latest-4-cores ]

    steps:
      - name: Run unit test cases
        run: ./gradlew testDebugUnitTest

  build:
    name: Build Android Release
    needs: test
    runs-on: [ ubuntu-latest-16-cores ]

    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Set app.properties
        run: echo " ${{ secrets.GRADLE_PROPERTIES }} " >> gradle.properties

      - name: Create google-services.json file
        run: cat androidApp/google-services.json | base64

      - name: Putting data in google-services.json
        env:
          DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo $DATA > androidApp/google-services.json

      - name: KT lint check
        run: ./gradlew ktlintFormat --info --stacktrace

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build Android Release
        run: ./gradlew assembleRelease

  upload:
    name: Upload APK to Firebase App Distribution
    needs: build
    runs-on: [ ubuntu-latest-4-cores ]
    env:
      BRANCH_NAME: ${{ github.ref || github.head_ref }}

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: actions/checkout@v3
      - name: Install Firebase CLI
        run: curl -sL https://firebase.tools | bash

      - name: Login to Firebase
        run: firebase login:ci --token ${{ secrets.FIREBASE_TOKEN }}

      - name: Distribute APK to Firebase App Distribution
        run: firebase appdistribution:distribute app/build/outputs/apk/release/app-release.apk 
            --app ${{ secrets.FIREBASE_APP_ID }}
            --release-notes "$BRANCH_NAME"          
            --groups testers
            --debug
